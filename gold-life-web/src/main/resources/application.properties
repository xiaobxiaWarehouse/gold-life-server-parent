#
# tomcat port
server.port=8080
server.tomcat.max-threads=1000
server.tomcat.uri-encoding=UTF-8
# 存放Tomcat的日志、Dump等文件的临时文件夹，默认为系统的tmp文件夹（如：C:\Users\Shanhy\AppData\Local\Temp）
server.tomcat.basedir=/var/log
# 打开Tomcat的Access日志，并可以设置日志格式的方法：
#server.tomcat.access-log-enabled=true
#server.tomcat.access-log-pattern=
# accesslog目录，默认在basedir/logs
#server.tomcat.accesslog.directory=
#
# Log
logging.file=supermanBootServer
logging.path=/var/log
#
#
#可用环境test,dev,prod,local，默认local
spring.profiles.active=local
spring.application.name=Spring Boot Demo

#
# dataSource
spring.datasource.driverClassName=com.mysql.jdbc.Driver
#
# Druid
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
# 初始化大小，最小，最大
spring.datasource.initialSize=1
spring.datasource.minIdle=5
spring.datasource.maxActive=200
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters=stat,wall,slf4j,config
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;
# 合并多个DruidDataSource的监控数据
#spring.datasource.useGlobalDataSourceStat=true


#
#for Test
spy.app.name=Spring Boot Demo
spy.user.home=${user.home}
#
#
#
# web
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true
#
# Redis
spring.redis.host=121.40.31.185
spring.redis.port=6379
spring.redis.maxIdle=300
spring.redis.maxTotal=600
spring.redis.maxWaitMillis=10000
spring.redis.testOnBorrow=true
spring.redis.encrypt=true
spring.redis.dataBase=0
spring.redis.publicKey=MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCa57BhJFo03XzxlE5Umu67duEWljV2SwfHPHg1chyUTUlPNhvtwcIkaXLGbFYl/zsPzHIA9AGXxtJKd5yEbTOPsNzJSrFWYR/ZpvTqIMKAyAB5WHu8xu7omOahI5VMCYLOEHVOzstsWA5Xo5V3xDB17tyA8O3rQ1h7UdgadkfGfwIDAQAB
spring.redis.password=KGgBx23kGnAqRNH9pUoEfZ0djLaeA9o5eIXWM25GXv0w0VpegO9FsbXgGYdOqmSQ49saFRPIEDMGFCvpw9S1ZV6ydqlwyFwpUPTWYvn6rLy9i/qPLrpNSFOmyGr2Co+Lwedve5k4sG2nlmPUBF0sQhYGQ1Om0lZNZ5xBSldEygg=
#
# spring boot admin
spring.boot.admin.url=http://localhost:8090
# disable
management.security.enabled=false
#management.security.roles=SUPERUSER
#management.context-path=/manage
#security.user.name=admin
#security.user.password=secret
